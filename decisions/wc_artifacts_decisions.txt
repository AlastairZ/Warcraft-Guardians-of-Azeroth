decisions = {

	open_market = {

		ai = no
		potential = {
			NOT = { has_character_flag = market_open }
		}

		allow = {
			prisoner = no
			is_incapable = no
			is_inaccessible_trigger = no
		}

		effect = {
			set_character_flag = market_open
		}

	}

	close_market = {

		is_high_prio = yes
		ai = no
		potential = {
			has_character_flag = market_open
		}

		allow = {
			NOT = { has_character_flag = bought_thing_recently }
		}

		effect = {
			clr_character_flag = market_open
		}

	}
	
	# Artifacts
	market_buy_top_hat = {

		ai_check_interval = 60
		only_playable = yes
		potential = {
			can_rule_peacefully_trigger = yes
			is_untouchable_trigger = no
			OR = {
				ai = yes
				has_character_flag = market_open
			}
			OR = {
				ai = no
				culture = gilnean
				culture = tirassian
				culture_group = goblin_group
			}
			OR = {
				ai = no
				NOT = {
					any_artifact = {
						has_artifact_flag = head
					}
				}
			}
		}

		allow = {
			prisoner = no
			is_incapable = no
			OR = {
				AND = {
					OR = {
						culture = gilnean
						culture = tirassian
						culture_group = goblin_group
					}
					wealth = 62.5
				}
				wealth = 625
			}
			NOT = {	has_character_flag = bought_thing_recently }
		}

		effect = {
			if = {
				limit = {
					OR = {
						culture = gilnean
						culture = tirassian
						culture_group = goblin_group
					}
				}
				wealth = -62.5
			}
			else = {
				wealth = -625
			}

			set_character_flag = bought_artifact_top_hat
			set_character_flag = bought_from_tailor
			set_character_flag = bought_thing_recently

			random_list = {
				90 = { #success
					custom_tooltip = {
						text = artifact_up_success_tooltip
						character_event = { id = WCAE.9 }
					}
					artifact_buy_success_score = yes
				}
				10 = { #failure
					custom_tooltip = {
						text = artifact_up_failure_tooltip
						character_event = { id = WCAE.10 }
					}
					artifact_buy_failure_score = yes
				}
			}
		}

	}

	market_buy_rogue_dagger = {

		ai_check_interval = 60
		only_playable = yes
		potential = {
			can_rule_peacefully_trigger = yes
			OR = {
				ai = yes
				has_character_flag = market_open
			}
			OR = {
				ai = no
				is_rogue_class_trigger = yes
			}
			OR = {
				ai = no
				NOT = {
					any_artifact = {
						has_artifact_flag = dagger
						count = 2
					}
				}
			}
		}

		allow = {
			prisoner = no
			is_incapable = no
			wealth = 125
			NOT = {	has_character_flag = bought_thing_recently }
		}

		effect = {
			wealth = -125
			set_character_flag = bought_artifact_rogue_dagger
			set_character_flag = bought_from_blacksmith
			set_character_flag = bought_thing_recently

			random_list = {
				90 = { #success
					custom_tooltip = {
						text = artifact_up_success_tooltip
						character_event = { id = WCAE.9 }
					}
					artifact_buy_success_score = yes
				}
				10 = { #failure
					custom_tooltip = {
						text = artifact_up_failure_tooltip
						character_event = { id = WCAE.10 }
					}
					artifact_buy_failure_score = yes
				}
			}
		}

	}
	
	market_buy_copper_ring = {

		ai_check_interval = 60
		only_playable = yes
		potential = {
			can_rule_peacefully_trigger = yes
			OR = {
				ai = yes
				has_character_flag = market_open
			}
			OR = {
				ai = no
				NOT = {
					any_artifact = {
						has_artifact_flag = ring
						count = 2
					}
				}
			}
		}

		allow = {
			prisoner = no
			is_incapable = no
			wealth = 250
			NOT = {	has_character_flag = bought_thing_recently }
		}

		effect = {
			wealth = -250
			set_character_flag = bought_artifact_copper_ring
			set_character_flag = bought_from_jeweler
			set_character_flag = bought_thing_recently

			random_list = {
				80 = { #success
					custom_tooltip = {
						text = artifact_up_success_tooltip
						character_event = { id = WCAE.9 }
					}
					artifact_buy_success_score = yes
				}
				20 = { #failure
					custom_tooltip = {
						text = artifact_up_failure_tooltip
						character_event = { id = WCAE.10 }
					}
					artifact_buy_failure_score = yes
				}
			}
		}

	}
	
}

targetted_decisions = {
	upgrade_artifacts = {
		filter = self
		third_party_filter = artifacts
		show_third_party_potential = yes
		ai_target_filter = self
		ai_third_party_filter = artifacts
		ai_check_interval = 120
		only_playable = yes

		from_potential = {
			is_untouchable_trigger = no
		}

		potential = {
			is_untouchable_trigger = no
		}

		allow = {
			show_only_failed_conditions = yes
			FROM = {
				is_adult = yes
				is_incapable = no
				prisoner = no
				is_inaccessible_trigger = no
				custom_tooltip = {
					text = text_can_upgrade_artifact_rn
					NOR = {
						has_flag = improved_artifact_1
						has_flag = improved_artifact_2
						has_flag = improved_artifact_3
						has_flag = improved_artifact_4
						has_flag = bought_thing_recently
					}
				}
			}
		}

		third_party_potential = {
			show_only_failed_conditions = yes
			FROMFROM = {
				show_scope_change = no
				custom_tooltip = {
					text = text_can_be_upgrated

					has_artifact_flag = can_be_upgrated
					NOT = {
						has_artifact_flag = improved_artifact
					}
				}
			}
		}

		third_party_allow = {
			FROMFROM = {
				custom_tooltip = {
					text = text_can_be_upgrated

					has_artifact_flag = can_be_upgrated
				}
				
				trigger_if = {
					limit = {
						has_artifact_flag = expensive
					}
					
					trigger_if = {
						limit = { quality == 1 }
						artifact_owner = { wealth = 500 }
					}
					trigger_if = {
						limit = { quality == 2 }
						artifact_owner = { wealth = 1000 }
					}
					trigger_if = {
						limit = { quality == 3 }
						artifact_owner = { wealth = 2500 }
					}
					trigger_if = {
						limit = { quality == 4 }
						artifact_owner = { wealth = 5000 }
					}
				}
				trigger_if = {
					limit = {
						NOT = { has_artifact_flag = expensive }
					}
					
					trigger_if = {
						limit = { quality == 1 }
						artifact_owner = { wealth = 250 }
					}
					trigger_if = {
						limit = { quality == 2 }
						artifact_owner = { wealth = 500 }
					}
					trigger_if = {
						limit = { quality == 3 }
						artifact_owner = { wealth = 1250 }
					}
					trigger_if = {
						limit = { quality == 4 }
						artifact_owner = { wealth = 2500 }
					}
				}

				trigger_if = {
					limit = {
						artifact_type = ring_3
					}
					artifact_owner = {
						learning = 12
						OR = {
							diplomacy = 15
							stewardship = 15
							martial = 15
							intrigue = 15
						}
					}
				}
				trigger_if = {
					limit = {
						artifact_type = ring_of_martial
					}
					artifact_owner = {
						learning = 15
						martial = 20
					}
				}
				trigger_if = {
					limit = {
						artifact_type = ring_of_diplomacy
					}
					artifact_owner = {
						learning = 15
						diplomacy = 20
					}
				}
				trigger_if = {
					limit = {
						artifact_type = ring_of_stewardship
					}
					artifact_owner = {
						learning = 15
						stewardship = 20
					}
				}
				trigger_if = {
					limit = {
						artifact_type = ring_of_intrigue
					}
					artifact_owner = {
						learning = 15
						intrigue = 20
					}
				}

				is_artifact_active = yes
				is_artifact_equipped = no
			}
		}

		third_party_score = {
			factor = -125
			additive_modifier = {
				value = -125
				FROMFROM = {
					quality >= 1
				}
			}
			additive_modifier = {
				value = -250
				FROMFROM = {
					quality >= 2
				}
			}
			additive_modifier = {
				value = -750
				FROMFROM = {
					quality >= 3
				}
			}
			additive_modifier = {
				value = -1250
				FROMFROM = {
					quality >= 4
				}
			}
			modifier = {
				factor = 2.0
				FROMFROM = {
					has_artifact_flag = expensive
				}
			}
		}

		effect = {
			hidden_tooltip = {
				FROMFROM = {
					set_artifact_flag = improved_artifact
					save_event_target_as = improved_artifact
				}
				set_character_flag = bought_thing_recently
				if = {
					limit = {
						FROMFROM = {
							quality == 1
						}
					}
					set_character_flag = improved_artifact_1
				}
				if = {
					limit = {
						FROMFROM = {
							quality == 2
						}
					}
					set_character_flag = improved_artifact_2
				}
				if = {
					limit = {
						FROMFROM = {
							quality == 3
						}
					}
					set_character_flag = improved_artifact_3
				}
				if = {
					limit = {
						FROMFROM = {
							quality == 4
						}
					}
					set_character_flag = improved_artifact_4
				}
				
				FROMFROM = {
					trigger_switch = {
						on_trigger = has_artifact_flag
						blacksmith	= { artifact_owner = { set_character_flag = bought_from_blacksmith			}	}
						tailor		= { artifact_owner = { set_character_flag = bought_from_tailor				}	}
						enchanter	= { artifact_owner = { set_character_flag = bought_from_enchanter			}	}
						alchemist	= { artifact_owner = { set_character_flag = bought_from_alchemist			}	}
						jeweler		= { artifact_owner = { set_character_flag = bought_from_jeweler				}	}
					}
				}
				FROMFROM = {
					trigger_switch = {
						on_trigger = has_artifact_flag
						dagger		= { artifact_owner = { set_character_flag = bought_artifact_rogue_dagger	}	}
						hat			= { artifact_owner = { set_character_flag = bought_artifact_top_hat			}	}
						ring		= { artifact_owner = { set_character_flag = bought_artifact_copper_ring		}	}
					}
				}

				character_event = { id = WCAE.2 }
			}
		}
	
		revoke_allowed = {
			always = no
		}
	
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				OR = {
					trait = content
					war = yes
				}
			}
			modifier = {
				factor = 0.25
				trait = greedy
			}
		}
	}

	summon_a_parrot = { # Pirate Admiral's Hat - Summon a parrot
		only_playable = yes

		filter = self
		ai_target_filter = self
		ai_check_interval = 60
		
		potential = {
			is_adult = yes
			is_incapable = no
			prisoner = no
			is_inaccessible_trigger = no

			higher_real_tier_than = count

			OR = {
				culture = pirate_culture
				culture = blackwater
			}

			any_artifact = {
				has_artifact_flag = can_summon_parrots
			}
		}
		
		allow = {
			wealth = 50
			prestige = 1000
			custom_tooltip = {
				text = pirate_hat_summon_parrot_tooltip
				any_artifact = {
					has_artifact_flag = can_summon_parrots
					is_artifact_equipped = yes
				}
			}
			NOT = {
				has_character_modifier = pet_parrot
			}
		}

		effect = {
			wealth = -50
			hidden_tooltip = {
				random_list = {
					99 = {
						modifier = {
							factor = 0
							any_artifact = {
								artifact_type = pirate_admiral_hat_gold #impossible to obtain without cheats
								is_artifact_equipped = yes
							}
						}
						add_character_modifier = {
							name = pet_parrot
							duration = -1
						}
						character_event = { id = RIP.11507 }
					}
					1 = {
						character_event = { id = WCAE.1 } #Rare Pepe
					}
				}
			}
		}
		
		revoke_allowed = {
			always = no
		}
		
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 1.5
				wealth = 500
			}
			modifier = {
				factor = 2
				wealth = 1000
			}
			modifier = {
				factor = 2
				NOT = { trait = shy }
				num_of_friends = 0
			}
		}
	}
}