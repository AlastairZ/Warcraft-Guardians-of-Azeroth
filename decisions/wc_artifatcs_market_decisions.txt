decisions = {

	# Artifacts
	market_buy_top_hat = {
		ai = no

		#ai_check_interval = 60

		potential = {
			char_can_buy_artifacts_potential_trigger = yes
		}

		allow = {
			char_can_buy_artifacts_allow_trigger = yes

			OR = {
				AND = {
					OR = {
						culture = gilnean
						culture = tirassian
						culture_group = goblin_group
					}
					wealth = 62.5
				}
				wealth = 625
			}
		}

		effect = {
			hidden_effect = {
				set_character_flag = bought_artifact_top_hat
				set_character_flag = bought_from_tailor
				set_character_flag = bought_thing_recently

				if = {
					limit = {
						OR = {
							culture = gilnean
							culture = tirassian
							culture_group = goblin_group
						}
					}
					set_variable = { which = artifact_market_cost_variable value = -62.5 }
				}
				else = {
					set_character_flag = bought_artifact_difficult_to_find

					set_variable = { which = artifact_market_cost_variable value = -625 }
				}

				character_event = { id = WCAE.150 }
			}
		}

	}

	market_buy_rogue_dagger = {
		ai = no

		#ai_check_interval = 60

		potential = {
			char_can_buy_artifacts_potential_trigger = yes
			is_rogue_class_trigger = yes
		}

		allow = {
			char_can_buy_artifacts_allow_trigger = yes

			wealth = 125
		}

		effect = {
			hidden_effect = {
				set_character_flag = bought_artifact_rogue_dagger
				set_character_flag = bought_from_blacksmith
				set_character_flag = bought_thing_recently

				set_variable = { which = artifact_market_cost_variable value = -125 }

				character_event = { id = WCAE.150 }
			}
		}

	}

	market_buy_copper_ring = {
		ai = no

		#ai_check_interval = 60

		potential = {
			char_can_buy_artifacts_potential_trigger = yes
		}

		allow = {
			char_can_buy_artifacts_allow_trigger = yes

			wealth = 250
		}

		effect = {
			hidden_effect = {
				set_character_flag = bought_artifact_copper_ring
				set_character_flag = bought_artifact_difficult_to_find
				set_character_flag = bought_from_jeweler
				set_character_flag = bought_thing_recently

				set_variable = { which = artifact_market_cost_variable value = -250 }

				character_event = { id = WCAE.150 }
			}
		}

	}

	market_buy_amulet = {
		ai = no

		#ai_check_interval = 60

		potential = {
			char_can_buy_artifacts_potential_trigger = yes
		}

		allow = {
			char_can_buy_artifacts_allow_trigger = yes

			wealth = 250
		}

		effect = {
			hidden_effect = {
				set_character_flag = bought_artifact_amulet
				set_character_flag = bought_artifact_difficult_to_find
				set_character_flag = bought_from_jeweler
				set_character_flag = bought_thing_recently

				set_variable = { which = artifact_market_cost_variable value = -250 }
				character_event = { id = WCAE.150 }
			}
		}

	}

	market_buy_ruler_crown = {
		ai = no

		#ai_check_interval = 60

		potential = {
			char_can_buy_artifacts_potential_trigger = yes
			is_feudal = yes
			holy_order = no
			mercenary = no
			is_landed = yes
		}

		allow = {
			char_can_buy_artifacts_allow_trigger = yes

			wealth = 500
		}

		effect = {
			hidden_effect = {
				set_character_flag = bought_artifact_ruler_crown
				set_character_flag = bought_artifact_difficult_to_find
				set_character_flag = bought_from_jeweler
				set_character_flag = bought_thing_recently

				set_variable = { which = artifact_market_cost_variable value = -500 }
				character_event = { id = WCAE.150}
			}
		}

	}

	market_buy_cape = {
		ai = no

		#ai_check_interval = 60

		potential = {
			char_can_buy_artifacts_potential_trigger = yes
		}

		allow = {
			char_can_buy_artifacts_allow_trigger = yes

			wealth = 62.5
			NOT = {	has_character_flag = bought_thing_recently }
		}

		effect = {
			hidden_effect = {
				set_character_flag = bought_artifact_cloak
				set_character_flag = bought_from_tailor
				set_character_flag = bought_thing_recently

				set_variable = { which = artifact_market_cost_variable value = -62.5 }
				character_event = { id = WCAE.150 }
			}
		}

	}

}

targetted_decisions = {

	market_open_market = {
		ai = no

		filter = self

		potential = {
			OR = {
				AND = {
					char_can_buy_artifacts_no_flag_potential_trigger = yes
					NOT = { has_character_flag = market_open }
				}
				has_character_flag = market_open
			}
		}

		allow = {
			OR = {
				AND = {
					char_can_buy_artifacts_allow_trigger = yes
					NOT = { has_character_flag = market_open }
				}
				has_character_flag = market_open
			}
		}

		effect = {
			if = {
				limit = { has_character_flag = market_open }
				clr_character_flag = market_open
			}
			else = {
				set_character_flag = market_open
			}
		}

	}

	market_upgrade_artifacts = {
		ai = no

		filter = self
		third_party_filter = artifacts
		show_third_party_potential = yes

		potential = {
			char_can_buy_artifacts_potential_trigger = yes
		}

		allow = {
			char_can_buy_artifacts_allow_trigger = yes
		}

		third_party_potential = {
			show_only_failed_conditions = yes
			FROMFROM = {
				show_scope_change = no
				custom_tooltip = {
					text = text_can_be_upgrated

					has_artifact_flag = can_be_upgrated
					NOT = {
						has_artifact_flag = improved_artifact #damaged
					}
					trigger_if = {
						limit = {	artifact_type = cloak_blue	}
						artifact_owner = { is_member_of_alliance_faction_trigger = yes }
					}
					trigger_if = {
						limit = {	artifact_type = cloak_red	}
						artifact_owner = { is_member_of_horde_faction_trigger = yes }
					}
				}
			}
		}

		third_party_allow = {
			FROMFROM = {
				custom_tooltip = {
					text = text_can_be_upgrated

					has_artifact_flag = can_be_upgrated
				}
				artifact_owner = { wealth = local_third_party_score }

				is_artifact_active = yes
				is_artifact_equipped = no
			}
		}

		third_party_score = {
			#Base
			factor = 125

			#Artifact
			additive_modifier = {
				value = 125
				FROMFROM = {
					quality >= 1
				}
			}
			additive_modifier = {
				value = 250
				FROMFROM = {
					quality >= 2
				}
			}
			additive_modifier = {
				value = 750
				FROMFROM = {
					quality >= 3
				}
			}
			additive_modifier = {
				value = 1250
				FROMFROM = {
					quality >= 4
				}
			}
			modifier = {
				factor = 2
				FROMFROM = {
					has_artifact_flag = expensive
				}
			}

			#Character
			modifier = {
				factor = 1.1
				FROM = {	diplomacy < 8		}
			}
			modifier = {
				factor = 1.1
				FROM = {	stewardship < 8		}
			}
			modifier = {
				factor = 1.25
				FROM = {	diplomacy < 4		}
			}
			modifier = {
				factor = 1.25
				FROM = {	stewardship < 4		}
			}
			modifier = {
				factor = 1.5
				FROM = {	diplomacy < 2		}
			}
			modifier = {
				factor = 1.5
				FROM = {	stewardship < 2		}
			}
			modifier = {
				factor = 0.95
				FROM = {	diplomacy = 12		}
			}
			modifier = {
				factor = 0.95
				FROM = {	stewardship = 12	}
			}
			modifier = {
				factor = 0.95
				FROM = {	diplomacy = 16		}
			}
			modifier = {
				factor = 0.95
				FROM = {	stewardship = 16	}
			}
			modifier = {
				factor = 0.95
				FROM = {	diplomacy = 20		}
			}
			modifier = {
				factor = 0.95
				FROM = {	stewardship = 20	}
			}
			modifier = {
				factor = 0.95
				FROM = {	diplomacy = 24		}
			}
			modifier = {
				factor = 0.95
				FROM = {	stewardship = 24	}
			}
		}

		effect = {
			hidden_effect = {
				FROMFROM = {
					set_artifact_flag = improved_artifact
					save_event_target_as = improved_artifact
				}
				set_character_flag = bought_thing_recently
				if = {
					limit = { FROMFROM = { quality == 1 } }
					set_character_flag = improved_artifact_1
				}
				if = {
					limit = { FROMFROM = { quality == 2 } }
					set_character_flag = improved_artifact_2
				}
				if = {
					limit = { FROMFROM = { quality == 3 } }
					set_character_flag = improved_artifact_3
				}
				if = {
					limit = { FROMFROM = { quality == 4 } }
					set_character_flag = improved_artifact_4
				}

				FROMFROM = {
					trigger_switch = {
						on_trigger = has_artifact_flag
						blacksmith	= { artifact_owner = { set_character_flag = bought_from_blacksmith			}	}
						tailor		= { artifact_owner = { set_character_flag = bought_from_tailor				}	}
						enchanter	= { artifact_owner = { set_character_flag = bought_from_enchanter			}	}
						alchemist	= { artifact_owner = { set_character_flag = bought_from_alchemist			}	}
						jeweler		= { artifact_owner = { set_character_flag = bought_from_jeweler				}	}
					}
				}
				FROMFROM = {
					trigger_switch = {
						on_trigger = has_artifact_flag
						dagger		= { artifact_owner = { set_character_flag = bought_artifact_rogue_dagger	}	}
						hat			= { artifact_owner = { set_character_flag = bought_artifact_top_hat			}	}
						ring		= { artifact_owner = { set_character_flag = bought_artifact_copper_ring		}	}
						crown		= { artifact_owner = { set_character_flag = bought_artifact_ruler_crown		}	}
						cloak		= { artifact_owner = { set_character_flag = bought_artifact_cloak			}	}
					}
				}

				character_event = { id = WCAE.1 days = 60 random = 60 }
			}
		}

		revoke_allowed = {
			always = no
		}

	}

	market_sell_artifacts = {
		ai = no

		filter = self
		third_party_filter = artifacts
		show_third_party_potential = yes

		potential = {
			char_can_buy_artifacts_potential_trigger = yes
		}

		allow = { # WAD
			custom_tooltip = {
				text = text_can_upgrade_artifact_rn
				NOT = { has_character_flag = bought_thing_recently }
			}
		}

		third_party_potential = {
			show_only_failed_conditions = yes
			FROMFROM = {
				show_scope_change = no
				custom_tooltip = {
					text = text_can_be_sold

					NOR = {
						is_indestructible = yes
						has_artifact_flag = treasure_chest
					}
				}
			}
		}

		third_party_allow = {
			always = yes
		}

		third_party_score = {
			factor = 25
			additive_modifier = {
				value = 75
				FROMFROM = {
					quality >= 2
				}
			}
			additive_modifier = {
				value = 150
				FROMFROM = {
					quality >= 3
				}
			}
			additive_modifier = {
				value = 250
				FROMFROM = {
					quality >= 4
				}
			}
			additive_modifier = {
				value = 500
				FROMFROM = {
					quality >= 5
				}
			}
			modifier = {
				factor = 0.5
				FROMFROM = {
					has_artifact_flag = improved_artifact # damaged
				}
			}
			modifier = {
				factor = 5
				FROMFROM = {
					has_artifact_flag = can_be_sold_expensive
				}
			}
			modifier = {
				factor = 0.9
				FROM = {
					diplomacy < 8
				}
			}
			modifier = {
				factor = 0.9
				FROM = {
					stewardship < 8
				}
			}
			modifier = {
				factor = 0.9
				FROM = {
					diplomacy < 4
				}
			}
			modifier = {
				factor = 0.9
				FROM = {
					stewardship < 4
				}
			}
			modifier = {
				factor = 1.05
				FROM = {
					diplomacy = 12
				}
			}
			modifier = {
				factor = 1.05
				FROM = {
					stewardship = 12
				}
			}
			modifier = {
				factor = 1.05
				FROM = {
					diplomacy = 16
				}
			}
			modifier = {
				factor = 1.05
				FROM = {
					stewardship = 16
				}
			}
			modifier = {
				factor = 1.05
				FROM = {
					diplomacy = 20
				}
			}
			modifier = {
				factor = 1.05
				FROM = {
					stewardship = 20
				}
			}
			modifier = {
				factor = 1.05
				FROM = {
					diplomacy = 24
				}
			}
			modifier = {
				factor = 1.05
				FROM = {
					stewardship = 24
				}
			}
		}

		effect = {
			wealth = local_third_party_score
			FROMFROM = {
				show_scope_change = no
				destroy_artifact = yes
			}
		}

	}

	market_open_chest = {
		ai = no

		filter = self
		third_party_filter = artifacts
		show_third_party_potential = yes

		potential = { #WAD
			char_can_buy_artifacts_allow_trigger = yes
			has_character_flag = market_open
			any_artifact = {
				has_artifact_flag = treasure_chest
			}
		}

		allow = {
			char_can_buy_artifacts_allow_trigger = yes
		}

		third_party_potential = {
			show_only_failed_conditions = yes
			FROMFROM = {
				show_scope_change = no
				has_artifact_flag = treasure_chest
			}
		}

		effect = {
			hidden_effect = {
				FROMFROM = {
					set_artifact_flag = improved_artifact
					save_event_target_as = improved_artifact
				}
				set_character_flag = bought_thing_recently
				if = {
					limit = { FROMFROM = { quality == 1 } }
					set_character_flag = opened_lootbox_1
				}
				if = {
					limit = { FROMFROM = { quality == 2 } }
					set_character_flag = opened_lootbox_2
				}
				if = {
					limit = { FROMFROM = { quality == 3 } }
					set_character_flag = opened_lootbox_3
				}
				if = {
					limit = { FROMFROM = { quality == 4 } }
					set_character_flag = opened_lootbox_4
				}

				lootbox_open_effect = yes
			}
		}

	}
}