namespace = WCSCRFC
namespace = HF
namespace = SSI

character_event = { # Army commander sacrifice province population
	id = WCSCRFC.1

	desc = {
		trigger = { publicly_worship_one_of_old_gods_trigger = yes }
		text = EVTDESC_WCSCRFC_1_V1
	}
	desc = {
		trigger = { publicly_worship_one_of_old_gods_trigger = no }
		text = EVTDESC_WCSCRFC_1_V2
	}

	picture = {
		trigger = { religion = cult_of_hakkar }
		picture = GFX_evt_hakkar
	}
	picture = {
		trigger = { religion = old_gods_worship has_character_modifier = follower_of_cthun }
		picture = GFX_evt_cthun
	}
	picture = {
		trigger = { religion = old_gods_worship has_character_modifier = follower_of_nzoth }
		picture = GFX_evt_nzoth
	}
	picture = {
		trigger = { religion = old_gods_worship has_character_modifier = follower_of_yogg_saron }
		picture = GFX_evt_yogg_saron
	}
	picture = {
		trigger = { religion = old_gods_worship has_character_modifier = follower_of_yshaarj }
		picture = GFX_evt_yshaarj
	}
	picture = {
		trigger = {
			religion = old_gods_worship
			NOT = {
				has_character_modifier = follower_of_cthun
				has_character_modifier = follower_of_nzoth
				has_character_modifier = follower_of_yogg_saron
				has_character_modifier = follower_of_yshaarj
			}
		}
		picture = GFX_evt_voidwalker
	}
	picture = {
		trigger = { NOT = { religion = cult_of_hakkar religion = old_gods_worship  } }
		picture = GFX_evt_pagan_blood_sacrifice
	}

	notification = yes
	is_triggered_only = yes

	trigger = {
		is_ruler = yes
		religion_have_sacrifices_trigger = yes
		FROM = {
			OR = {
				holding_type = city
				holding_type = temple
				holding_type = castle
				holding_type = tribal
			}
			holder_scope = { NOT = { character = ROOT same_realm = ROOT } }
			location = {
				NOT = {
					has_province_modifier = bloodthirsty_flower_war_province
					has_province_modifier = depopulated_1
					has_province_modifier = depopulated_2
					has_province_modifier = depopulated_3
				}
			}
		}
	}

	weight_multiplier = {
		modifier = {
			factor = 1.25
			trait = zealous
		}
		modifier = {
			factor = 0.75
			trait = cynical
		}
		modifier = {
			factor = 1.25
			trait = ambitious
		}
		modifier = {
			factor = 0.75
			trait = content
		}
		modifier = {
			factor = 1.25
			trait = cruel
		}
		modifier = {
			factor = 0.75
			trait = kind
		}
	}

	immediate = {
		FROM = { location = { save_event_target_as = target_sacrifice_location } }
		save_event_target_as = target_sacrificer_commander

		if = { # Get Offmap Old Gods Currency if worship Old Gods
			limit = { publicly_worship_one_of_old_gods_trigger = yes }

			random_list = {
				10 = {
					modifier = {
						factor = 3
						FROM = { location = { num_of_settlements = 6 } }
					}

					if = {
						limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_insanity_gain } }
						set_variable = { which = local_received_offmap_old_gods_currency_insanity_from_province_population_sacrifice_variable value = 225 }
					}
					else = { set_variable = { which = local_received_offmap_old_gods_currency_insanity_from_province_population_sacrifice_variable value = 150 } }
				}
				20 = {
					modifier = {
						factor = 3
						FROM = { location = { num_of_settlements = 4 } }
						FROM = { location = { NOT = { num_of_settlements = 6 } } }
					}

					if = {
						limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_insanity_gain } }
						set_variable = { which = local_received_offmap_old_gods_currency_insanity_from_province_population_sacrifice_variable value = 150 }
					}
					else = { set_variable = { which = local_received_offmap_old_gods_currency_insanity_from_province_population_sacrifice_variable value = 100 } }
				}
				30 = {
					modifier = {
						factor = 3
						FROM = { location = { num_of_settlements = 2 } }
						FROM = { location = { NOT = { num_of_settlements = 4 } } }
					}

					if = {
						limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_insanity_gain } }
						set_variable = { which = local_received_offmap_old_gods_currency_insanity_from_province_population_sacrifice_variable value = 75 }
					}
					else = { set_variable = { which = local_received_offmap_old_gods_currency_insanity_from_province_population_sacrifice_variable value = 50 } }
				}
				40 = {
					modifier = {
						factor = 3
						FROM = { location = { NOT = { num_of_settlements = 2 } } }
					}

					if = {
						limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_insanity_gain } }
						set_variable = { which = local_received_offmap_old_gods_currency_insanity_from_province_population_sacrifice_variable value = 30 }
					}
					else = { set_variable = { which = local_received_offmap_old_gods_currency_insanity_from_province_population_sacrifice_variable value = 20 } }
				}
			}
		}
		else_if = { # Or get piety
			limit = { religion_have_ritual_sacrifice_trigger = yes }

			piety = 25
			bloodthirsty_tiered_traits_effect = yes
		}

		FROM = { # Sacrifice province population
			location = { sacrifice_province_population_effect = yes }
			if = {
				limit = { settlement_can_be_destroyed_trigger = yes }
				destroy_random_building = THIS
				location = {
					if = {
						limit = { has_wonder = yes }
						random = {
							chance = 30
							wealth = 100
							wonder = { set_wonder_damaged = yes }
						}
					}
				}
			}

			if = { # Pick character to sacrifice
				limit = { is_capital = yes }
				owner = {
					random_courtier = {
						limit = {
							is_ruler = no
							can_be_sacrificed_trigger = yes
						}
						random = {
							chance = 25
							modifier = {
								factor = 3
								is_unimportant_trigger = yes
							}
							modifier = {
								factor = 3
								has_minor_title = title_commander
							}
							modifier = { #Less likely to be in battle.
								factor = 0.5
								is_adult = no
							}
							modifier = { #Less likely to be in battle.
								factor = 0.5
								is_adult = no
								is_child_of = PREV
							}
							ROOT = { PREV = { save_event_target_as = target_sacrificed_character } }
						}
					}
				}
			}

			ROOT = {

				# Ping event and negative opinion effect
				THIS_sacrifice_PREV_subjects_opinion_effect = yes
				PREV = {
					owner = {
						if = { limit = { ai = no } character_event = { id = WCSCRFC.2 } }
						any_liege = {
							if = { limit = { ai = no } character_event = { id = WCSCRFC.2 } }
							ROOT = { THIS_sacrifice_PREV_subjects_opinion_effect = yes }
						}
					}
				}
				
				if = { # Get offmap Old Gods Currency
					limit = { publicly_worship_one_of_old_gods_trigger = yes }

					set_variable = {
						which = local_received_offmap_old_gods_currency_insanity_from_sacrifices_total_variable
						which = local_received_offmap_old_gods_currency_insanity_from_province_population_sacrifice_variable
					}
					if = { # Sacrifice character
						limit = { event_target:target_sacrificed_character = { always = yes } }
						set_character_flag = wc_do_not_show_post_sacrifice_ping_event_flag
						event_target:target_sacrificed_character = {
							caltulate_PREV_offmap_old_gods_currency_insanity_effect = yes
							change_variable = {
								which = local_received_offmap_old_gods_currency_insanity_from_sacrifices_total_variable
								which = local_received_offmap_old_gods_currency_insanity_from_character_sacrifice_variable
							}
							PREV_public_sacrifice_THIS_effect = yes
						}
						clr_character_flag = wc_do_not_show_post_sacrifice_ping_event_flag
					}

					trigger_switch = {
						on_trigger = has_character_modifier
						follower_of_cthun = {		add_offmap_currency = { offmap = offmap_cthun		value = local_received_offmap_old_gods_currency_insanity_from_sacrifices_total_variable } }
						follower_of_nzoth = {		add_offmap_currency = { offmap = offmap_nzoth		value = local_received_offmap_old_gods_currency_insanity_from_sacrifices_total_variable } }
						follower_of_yogg_saron = {	add_offmap_currency = { offmap = offmap_yoggsaron	value = local_received_offmap_old_gods_currency_insanity_from_sacrifices_total_variable } }
						follower_of_yshaarj = {		add_offmap_currency = { offmap = offmap_yshaarj		value = local_received_offmap_old_gods_currency_insanity_from_sacrifices_total_variable } }
					}
				}
			}
		}
	}

	option = { name = EVTOPT_WCSCRFC_1 }

}

character_event = { # Ping - Population of province was sacrificed
	id = WCSCRFC.2

	desc = EVTDESC_WCSCRFC_2

	picture = {
		trigger = { event_target:target_sacrificer_commander = { religion = cult_of_hakkar } }
		picture = GFX_evt_hakkar
	}
	picture = {
		trigger = { event_target:target_sacrificer_commander = { religion = old_gods_worship has_character_modifier = follower_of_cthun } }
		picture = GFX_evt_cthun
	}
	picture = {
		trigger = { event_target:target_sacrificer_commander = { religion = old_gods_worship has_character_modifier = follower_of_nzoth } }
		picture = GFX_evt_nzoth
	}
	picture = {
		trigger = { event_target:target_sacrificer_commander = { religion = old_gods_worship has_character_modifier = follower_of_yogg_saron } }
		picture = GFX_evt_yogg_saron
	}
	picture = {
		trigger = { event_target:target_sacrificer_commander = { religion = old_gods_worship has_character_modifier = follower_of_yshaarj } }
		picture = GFX_evt_yshaarj
	}
	picture = {
		trigger = {
			event_target:target_sacrificer_commander = {
				religion = old_gods_worship
				NOT = {
					has_character_modifier = follower_of_cthun
					has_character_modifier = follower_of_nzoth
					has_character_modifier = follower_of_yogg_saron
					has_character_modifier = follower_of_yshaarj
				}
			}
		}
		picture = GFX_evt_voidwalker
	}
	picture = {
		trigger = { event_target:target_sacrificer_commander = { NOT = { religion = cult_of_hakkar religion = old_gods_worship  } } }
		picture = GFX_evt_pagan_blood_sacrifice
	}

	notification = yes
	is_triggered_only = yes

	option = { name = EVTOPT_WCSCRFC_2 }

}

character_event = {
	id = SSI.60

	# Warcraft
	desc = { # It is how it should be.
		trigger = { religion_have_ritual_sacrifice_trigger = yes }
		text = EVTDESC_SSI_060_B
	}
	desc = { # How terrible!
		trigger = { religion_have_ritual_sacrifice_trigger = no }
		text = EVTDESCHF23001
	}
	picture = {
		trigger = { event_target:target_sacrificer = { religion = cult_of_hakkar } }
		picture = GFX_evt_hakkar
	}
	picture = {
		trigger = { event_target:target_sacrificer = { religion = old_gods_worship has_character_modifier = follower_of_cthun } }
		picture = GFX_evt_cthun
	}
	picture = {
		trigger = { event_target:target_sacrificer = { religion = old_gods_worship has_character_modifier = follower_of_nzoth } }
		picture = GFX_evt_nzoth
	}
	picture = {
		trigger = { event_target:target_sacrificer = { religion = old_gods_worship has_character_modifier = follower_of_yogg_saron } }
		picture = GFX_evt_yogg_saron
	}
	picture = {
		trigger = { event_target:target_sacrificer = { religion = old_gods_worship has_character_modifier = follower_of_yshaarj } }
		picture = GFX_evt_yshaarj
	}
	picture = {
		trigger = { event_target:target_sacrificer = { NOT = { religion = cult_of_hakkar religion = old_gods_worship } } }
		picture = GFX_evt_pagan_blood_sacrifice
	}

	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes

	# Warcraft
	option = {
		name = { # It is how it should be.
			trigger = { religion_have_ritual_sacrifice_trigger = yes }
			text = EVTOPTB_SSI_060
		}
		name = { # How terrible!
			trigger = { religion_have_ritual_sacrifice_trigger = no }
			text = EVTOPTAHF23001
		}
	}

}

# Liege Informed of Sacrifice
character_event = {
	id = SSI.62

	# Warcraft
	desc = { # It is how it should be.
		trigger = { religion_have_ritual_sacrifice_trigger = yes }
		text = EVTDESC_SSI_060_B
	}
	desc = { # How terrible!
		trigger = { religion_have_ritual_sacrifice_trigger = no }
		text = EVTDESCHF23001
	}
	picture = GFX_evt_pagan_blood_sacrifice

	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes

	# Warcraft
	option = {
		name = { # It is how it should be.
			trigger = { religion_have_ritual_sacrifice_trigger = yes }
			text = EVTOPTB_SSI_060
		}
		name = { # How terrible!
			trigger = { religion_have_ritual_sacrifice_trigger = no }
			text = EVTOPTAHF23001
		}
	}

}

# Ritual Sacrifice Prisoner
character_event = {
	id = HF.23001
	desc = EVTDESCHF23001
	
	picture = GFX_evt_pagan_blood_sacrifice
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAHF23001
	}
}

# Ritual Sacrifice Prisoner (Jailer's perspective)
character_event = {
	id = HF.23002

	# Warcraft
	desc = {
		trigger = {
			trigger_if = {
				limit = { religion = old_gods_worship }

				is_shadow_priest_class_trigger = no
				NOT = {
					any_realm_wonder_upgrade = {
						has_wonder_upgrade = upgrade_twilight_altar
						is_active = yes
					}
				}
			}
			trigger_else ={
				NOR = {
					trait = bloodthirsty_gods_1
					trait = bloodthirsty_gods_2
					trait = bloodthirsty_gods_3
				}
				NOT = {
					any_realm_wonder_upgrade = {
						has_wonder_upgrade = upgrade_sacrificial_altar
						is_active = yes
					}
				}
			}
		}

		text = EVTDESCHF23002
	}
	desc = {
		trigger = {
			trigger_if = {
				limit = { religion = old_gods_worship }

				is_shadow_priest_class_trigger = yes
				NOT = {
					any_realm_wonder_upgrade = {
						has_wonder_upgrade = upgrade_twilight_altar
						is_active = yes
					}
				}
			}
			trigger_else ={
				OR = {
					trait = bloodthirsty_gods_1
					trait = bloodthirsty_gods_2
					trait = bloodthirsty_gods_3
				}
				NOT = {
					any_realm_wonder_upgrade = {
						has_wonder_upgrade = upgrade_sacrificial_altar
						is_active = yes
					}
				}
			}
		}

		text = EVTDESCHF23002_B 	#Do it yourself.
	}
	desc = {
		trigger = {
			trigger_if = {
				limit = { religion = old_gods_worship }

				is_shadow_priest_class_trigger = no
				any_realm_wonder_upgrade = {
					has_wonder_upgrade = upgrade_twilight_altar
					is_active = yes
				}
			}
			trigger_else ={
				NOR = {
					trait = bloodthirsty_gods_1
					trait = bloodthirsty_gods_2
					trait = bloodthirsty_gods_3
				}
				any_realm_wonder_upgrade = {
					has_wonder_upgrade = upgrade_sacrificial_altar
					is_active = yes
				}
			}
		}

		text = EVTDESCHF23002_C
	}
	desc = {
		trigger = {
			trigger_if = {
				limit = { religion = old_gods_worship }

				is_shadow_priest_class_trigger = yes
				any_realm_wonder_upgrade = {
					has_wonder_upgrade = upgrade_twilight_altar
					is_active = yes
				}
			}
			trigger_else ={
				OR = {
					trait = bloodthirsty_gods_1
					trait = bloodthirsty_gods_2
					trait = bloodthirsty_gods_3
				}
				any_realm_wonder_upgrade = {
					has_wonder_upgrade = upgrade_sacrificial_altar
					is_active = yes
				}
			}
		}

		text = EVTDESCHF23002_D 	#Do it yourself.
	}
	
	# Warcraft
	picture = {
		trigger = { religion = cult_of_hakkar }
		picture = GFX_evt_hakkar
	}
	picture = {
		trigger = { religion = old_gods_worship has_character_modifier = follower_of_cthun }
		picture = GFX_evt_cthun
	}
	picture = {
		trigger = { religion = old_gods_worship has_character_modifier = follower_of_nzoth }
		picture = GFX_evt_nzoth
	}
	picture = {
		trigger = { religion = old_gods_worship has_character_modifier = follower_of_yogg_saron }
		picture = GFX_evt_yogg_saron
	}
	picture = {
		trigger = { religion = old_gods_worship has_character_modifier = follower_of_yshaarj }
		picture = GFX_evt_yshaarj
	}
	picture = {
		trigger = { NOT = { religion = cult_of_hakkar religion = old_gods_worship } }
		picture = GFX_evt_pagan_blood_sacrifice
	}

	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes

	immediate = {
		random_realm_wonder_upgrade = {
			limit = {

				# Warcraft
				trigger_if = {
					limit = { PREV = { religion = old_gods_worship } }

					has_wonder_upgrade = upgrade_twilight_altar
				}
				trigger_else = { has_wonder_upgrade = upgrade_sacrificial_altar }

				is_active = yes
			}
			save_event_target_as = the_sacrificial_altar
			wonder = { save_event_target_as = the_temple }
		}
	}
	
	option = {

		# Warcraft
		name = EVTOPTA_SSI_072

		if = {

			# Warcraft
			limit = { event_target:the_sacrificial_altar = { is_active = yes } }

			prestige = 10
		}
	}

	option = {
		name = EVTOPTBHF23002
		trigger = {

			# Warcraft
			event_target:target_sacrificed_prisoner = { can_be_eaten_trigger = yes }
			event_target:the_sacrificial_altar = { is_active = yes }

		}
		tooltip_info_custom = EVTOPTBHF23002_TT
		
		# Warcraft
		if = {
			limit = { NOT = { trait = cannibal_trait } }
			add_trait = cannibal_trait
		}

		add_character_modifier = {
			name = ate_beating_heart
			months = 6
		}
	}


	after = {

		# Warcraft - offmap OG currency
		tooltip = { add_offmap_old_gods_currency_insanity_after_calculation_effect = yes }

	}
}
