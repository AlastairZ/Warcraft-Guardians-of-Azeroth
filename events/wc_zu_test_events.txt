namespace = test
character_event = {		
	id = test.1
	desc = "Debug mode?"

	is_triggered_only = yes
	
	option = {
		name = "ON"
		set_character_flag = debug_mode_flag
	}
	option = {
		name = "OFF"
		clr_character_flag = debug_mode_flag
	}
}
character_event = {
	id = test.2
	desc = "Duel logs?"
	
	is_triggered_only = yes
	
	option = {
		name = "ON"
		set_global_flag = duel_logs_on_flag
	}
	option = {
		name = "OFF"
		clr_global_flag = duel_logs_on_flag
	}
}
narrative_event = {
	id = test.4
	
	is_triggered_only = yes
	
	trigger = {
		immortal_age > 40
	}
	
	option = {
		name = "A"
		
		rejuvenate_effect = yes
	}
	option = {
		name = "B"
		
		add_age = "myNegativeAge"
	}
	option = {
		name = "C"
	
		add_age = "myAge"
	}
	option = {
		name = "D"
	}
}
#Get 100 useful_flesh
character_event = {
	id = test.10
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		change_variable = { which = useful_flesh value = 100 }
	}
}

character_event = {		
	id = test.44
	desc = "Huh"

	is_triggered_only = yes

	immediate = {
		set_variable = { which = local_new_generic_artifact_receiving_character_matter_variable value = 1 }
		while = { count = 4 set_local_variables_for_new_received_generic_artifact_effect = yes }
	}

	option = {
		name = "A"

		random_list = { # All items in 4 options will have the same rarity
			1 = {
				generic_artifact_rarity_legendary_score = yes
				piety = 5
			}
			1 = {
				generic_artifact_rarity_epic_score = yes
				piety = 4
			}
			1 = {
				generic_artifact_rarity_rare_score = yes
				piety = 3
			}
			1 = {
				generic_artifact_rarity_uncommon_score = yes
				piety = 2
			}
			1 = {
				generic_artifact_rarity_common_score = yes
				piety = 1
			}
		}

		spawn_generic_artifact_based_on_option_a_variables_effect = yes
	}
	option = {
		name = "B"

			random_list = {
				1 = { # Melee Weapons
					random_list = {
						1 = {
							prefers_twohanded_score = yes
							prefers_swords_score = yes

							set_variable = { which = local_new_received_generic_artifact_option_d_weapon_sword_twohanded_variable value = 1 }
						}
						1 = {
							prefers_twohanded_score = yes
							prefers_axes_score = yes

							set_variable = { which = local_new_received_generic_artifact_option_d_weapon_axe_twohanded_variable value = 1 }
						}
						1 = {
							prefers_twohanded_score = yes
							prefers_maces_score = yes

							set_variable = { which = local_new_received_generic_artifact_option_d_weapon_mace_twohanded_variable value = 1 }
						}

						1 = {
							prefers_onehanded_score = yes
							prefers_swords_score = yes

							set_variable = { which = local_new_received_generic_artifact_option_d_weapon_sword_onehanded_variable value = 1 }
						}
						1 = {
							prefers_onehanded_score = yes
							prefers_axes_score = yes

							set_variable = { which = local_new_received_generic_artifact_option_d_weapon_axe_onehanded_variable value = 1 }
						}
						1 = {
							prefers_onehanded_score = yes
							prefers_maces_score = yes

							set_variable = { which = local_new_received_generic_artifact_option_d_weapon_mace_onehanded_variable value = 1 }
						}

						1 = {
							prefers_twohanded_score = yes
							prefers_spears_score = yes

							set_variable = { which = local_new_received_generic_artifact_option_d_weapon_spear_variable value = 1 }
						}
						1 = {
							prefers_twohanded_score = yes
							prefers_halberds_score = yes

							set_variable = { which = local_new_received_generic_artifact_option_d_weapon_halberd_variable value = 1 }
						}
					}
				}
				1 = { # Ranged Weapons
					random_list = {
						1 = {
							prefers_bow_score = yes

							set_variable = { which = local_new_received_generic_artifact_option_d_weapon_bow_variable value = 1 }
						}
						1 = { # Crossbows
							prefers_crossbow_score = yes

							trigger = {
								trigger_if = {
									limit = { check_variable = { which = local_new_generic_artifact_receiving_character_matter_variable value = 1 } }
									crossbow_artifact_active_trigger = yes
								}
							}
							set_variable = { which = local_new_received_generic_artifact_option_d_weapon_crossbow_variable value = 1 }
						}
						1 = { # Rifles
							prefers_rifle_score = yes

							trigger = {
								trigger_if = {
									limit = { check_variable = { which = local_new_generic_artifact_receiving_character_matter_variable value = 1 } }
									rifle_artifact_active_trigger = yes
								}
							}
							set_variable = { which = local_new_received_generic_artifact_option_d_weapon_rifle_variable value = 1 }
						}
					}
				}
			}

		spawn_generic_artifact_based_on_option_b_variables_effect = yes
	}
	option = {
		name = "C"

		spawn_generic_artifact_based_on_option_c_variables_effect = yes
	}
	option = {
		name = "D"

		spawn_generic_artifact_based_on_option_d_variables_effect = yes
	}
}